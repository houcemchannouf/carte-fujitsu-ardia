//############################################################################//
// HEAD : (c) ARDIA 2012 : " Any copie and re-utilisation of this file without  
//                           the written consent of ARDIA is forbidden "        
//        --------------------------------------------------------------------  
//        Classification :  (-)No   (-)Confident. ARDIA   (-)Confident. Client  
//        --------------------------------------------------------------------  
//        --------------------------------------------------------------------  
//        Module name : LIN0_DRV 
//############################################################################//
// FILE : LIN0_DRV.CFG (SOURCE)
//----------------------------------------------------------------------------//
// DESC : Module description
//----------------------------------------------------------------------------//
// LIST : * List of the functions
//----------------------------------------------------------------------------//
// HIST : Version |   Date   | Author           | Description                             
//----------------------------------------------------------------------------//
//         01.00  | 11/08/12 |  Ghariani Ahmed  | Creation of this file
//
//############################################################################//

//****************************************************************************//
// INCLIB
//****************************************************************************//

//****************************************************************************//
// INCUSER


//define register BGR1
#define r8BGRH1 BGRH1
#define r8BGRL1 BGRL1
#define r16BGR1 BGR1

//define register SMR1
#define rSMR1 SMR1
#define iEnableOutPutPin1 SMR1_SOE     // Enable the output of serial data
#define iEnableOutPutClock1 SMR1_SCKE  // Controls the serial clock
#define iClear1 SMR1_UPCL              // Clear all flags TDR,RDR,LBD,PE,ORE,FRE
#define iReset1 SMR1_REST              // Reload counter is restarted
#define iIEclock1 SMR1_EXT             // Executes internal or external clock
#define isetExtClock1 SMR1_OTO         // Sets an external clock directly to the LIN-USART’s serial clock
#define iMode1 SMR1_MD                 // USART operation mode

//define register SCR1
#define rSCR1 SCR1
#define iTrans1 SCR1_TXE            // Enable tansmission
#define iRecep1 SCR1_RXE            // Enable Reception
#define iClearFlag1 SCR1_CRE        // Clears the error flag
#define iDataForm1 SCR1_AD          // Specifies the data format Data bit or Adress Bit
#define iDataLength1 SCR1_CL        // Specifies Data Length 7 or 8
#define iLengthStop1 SCR1_SBL       // Specifies Length of the stop bie 1 or 2
#define iParity1 SCR1_P             // Specifies Even or Odd Parity
#define iEnableParity1 SCR1_PEN     // Enable or disable Parity

//define register RDR1
#define rRDR1 RDR1

//define register TDR1
#define rTDR1 TDR1

//define register SSR1
#define rSSR1 SSR1 
#define iEnableTrInt1 SSR1_TIE    //Enable Transmission Interrupt
#define iEnableRecInt1 SSR1_RIE   //Enable Reception Interrupt
#define iSRLM1 SSR1_BDS           //Send Receive LSB / MSB
#define itrDataFlag1 SSR1_TDRE    //Transmission data register is full or empty Read only
#define iRecDataFlag1 SSR1_RDRE   //reception data register is full or empty Read only
#define iframeError1 SSR1_FRE     //Framing Error occured  Read only
#define iOverrunError1 SSR1_ORE   //Overrun Error Occured  Read only
#define iParityError1 SSR1_PE     //Parity Error Occured  Read only


//define register ECCR1
#define rECCR1 ECCR1
#define iTrIsOn1 ECCR1_TBI           // Transmission is ongoing Read Only
#define iRecIsOn1 ECCR1_RBI          // Reception is ongoing Read only
#define iInt1 ECCR1_BIE              // Enable Bus idle interrupt
#define iEnableStartStop1 ECCR1_SSM  // Enable start stop bit in synchronous mode 2
#define iEnableClock1 ECCR1_SCDE     // Enable Clock delay
#define iEnableMS1 ECCR1_MS          // Enable Master Slave Mode 
#define iLINbreak1 ECCR1_LBR         // Genarating LIN break Write only
#define iInvertSData1 ECCR1_INV      // Invert Serial Data


//define register ESCR1
#define rESCR1 ESCR1
#define iSRclock1 ESCR1_SCES         // Sampling on rising serial clock edge  selection bit
#define iCCO1 ESCR1_CCO              // Continuous Clock Output enable bit
#define iIOPin1 iESCR1_SIOP          // SOT Serial Input/Output Pin direct access
#define iEnableOutPin1 ESCR1_SOPE    // Enable Serial Output pin direct Access
#define iSynLength10 ESCR1_LBL0      // Determine how many serial bit times the LIN synch break is generated
#define iSynLength11 ESCR1_LBL1
#define iSynLength1 ESCR1_LBL
#define iLINsynBreakFlag1 ESCR1_LBD  //
#define iEnableLINInt1 ESCR1_LBIE    // LIN synch break interrupt enable


//define register ESIR1
#define rESIR1 ESIR1
#define iEnableDMA1 ESIR1_AICD  // Auto Interrupt Clear is enabled (DMA can be used)
#define iNoRcep1 ESIR1_RBI      // No reception activity since last clear
#define iRDRF1 ESIR1_RDRF       // Indicates the status of the reception data register RDR
#define iTDRE1 ESIR1_TDRE       // indicates the status of the transmission data register TDR


//Pin
#define Sin1 PIER08_IE5
#define SOT1 PIER08_IE6

//ICU 
#define iICUEdgeDetct ICE01_IEI1
#define iInCaptur  ICE01_ICUS1

//define ICS01 register
#define rICS01 ICS01
#define iICS01EG00 ICS01_EG00 
#define iICS01EG01 ICS01_EG01 
#define iICS01EG10 ICS01_EG10 
#define iICS01EG11 ICS01_EG11 
#define iICS01ICE0 ICS01_ICE0 
#define iICS01ICE1 ICS01_ICE1 
#define iICS01ICP0 ICS01_ICP0 
#define iICS01ICP1 ICS01_ICP1 
#define iICS01EG0 ICS01_EG0 
#define iICS01EG1 ICS01_EG1 


// define IPCP1

#define rIPCP1 IPCP1

